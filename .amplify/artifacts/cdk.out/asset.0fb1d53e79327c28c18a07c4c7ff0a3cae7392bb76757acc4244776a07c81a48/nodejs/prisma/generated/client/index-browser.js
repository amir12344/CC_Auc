
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AddressesScalarFieldEnum = {
  address_id: 'address_id',
  first_name: 'first_name',
  last_name: 'last_name',
  address1: 'address1',
  address2: 'address2',
  address3: 'address3',
  city: 'city',
  province: 'province',
  province_code: 'province_code',
  country: 'country',
  country_code: 'country_code',
  zip: 'zip',
  phone: 'phone',
  company: 'company',
  latitude: 'latitude',
  longitude: 'longitude',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.Auction_listing_imagesScalarFieldEnum = {
  auction_listing_image_id: 'auction_listing_image_id',
  auction_listing_id: 'auction_listing_id',
  image_id: 'image_id'
};

exports.Prisma.Auction_listing_product_manifestsScalarFieldEnum = {
  auction_listing_product_manifest_id: 'auction_listing_product_manifest_id',
  auction_listing_id: 'auction_listing_id',
  category: 'category',
  subcategory: 'subcategory',
  title: 'title',
  description: 'description',
  brand_id: 'brand_id',
  sku: 'sku',
  identifier: 'identifier',
  identifier_type: 'identifier_type',
  external_identifier: 'external_identifier',
  external_identifier_type: 'external_identifier_type',
  part_number: 'part_number',
  model_name: 'model_name',
  product_condition: 'product_condition',
  cosmetic_condition: 'cosmetic_condition',
  available_quantity: 'available_quantity',
  retail_price: 'retail_price',
  ext_retail: 'ext_retail',
  is_hazmat: 'is_hazmat',
  lot_id: 'lot_id',
  pallet_id: 'pallet_id',
  department: 'department',
  accessories: 'accessories',
  weight: 'weight',
  product_weight_type: 'product_weight_type',
  product_height: 'product_height',
  product_length: 'product_length',
  product_width: 'product_width',
  product_length_type: 'product_length_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Auction_listingsScalarFieldEnum = {
  auction_listing_id: 'auction_listing_id',
  seller_profile_id: 'seller_profile_id',
  seller_user_id: 'seller_user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  category2: 'category2',
  category3: 'category3',
  subcategory: 'subcategory',
  subcategory2: 'subcategory2',
  subcategory3: 'subcategory3',
  subcategory4: 'subcategory4',
  subcategory5: 'subcategory5',
  status: 'status',
  default_image_url: 'default_image_url',
  lot_condition: 'lot_condition',
  cosmetic_condition: 'cosmetic_condition',
  shipping_cost: 'shipping_cost',
  total_units: 'total_units',
  total_ex_retail_price: 'total_ex_retail_price',
  estimated_retail_value: 'estimated_retail_value',
  estimated_weight: 'estimated_weight',
  weight_type: 'weight_type',
  is_refrigerated: 'is_refrigerated',
  is_fda_registered: 'is_fda_registered',
  is_hazmat: 'is_hazmat',
  is_private: 'is_private',
  visibility_settings: 'visibility_settings',
  location_address_id: 'location_address_id',
  auction_shipping_type: 'auction_shipping_type',
  auction_freight_type: 'auction_freight_type',
  piece_count: 'piece_count',
  lot_packaging: 'lot_packaging',
  number_of_pallets: 'number_of_pallets',
  pallet_spaces: 'pallet_spaces',
  number_of_truckloads: 'number_of_truckloads',
  number_of_shipments: 'number_of_shipments',
  resale_requirement: 'resale_requirement',
  accessories: 'accessories',
  inspection_status: 'inspection_status',
  seller_notes: 'seller_notes',
  shipping_notes: 'shipping_notes',
  additional_information: 'additional_information',
  bidding_requirements: 'bidding_requirements',
  minimum_bid: 'minimum_bid',
  current_bid: 'current_bid',
  bid_increment_value: 'bid_increment_value',
  bid_increment_type: 'bid_increment_type',
  winner_user_id: 'winner_user_id',
  winner_buyer_profile_id: 'winner_buyer_profile_id',
  current_bidder_user_id: 'current_bidder_user_id',
  current_bidder_buyer_profile_id: 'current_bidder_buyer_profile_id',
  auction_status: 'auction_status',
  auction_end_time: 'auction_end_time',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BrandsScalarFieldEnum = {
  brand_id: 'brand_id',
  brand_name: 'brand_name',
  brand_description: 'brand_description',
  brand_website: 'brand_website',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Buyer_profile_preferencesScalarFieldEnum = {
  buyer_profile_preference_id: 'buyer_profile_preference_id',
  buyer_profile_id: 'buyer_profile_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Buyer_profilesScalarFieldEnum = {
  buyer_profile_id: 'buyer_profile_id',
  user_id: 'user_id',
  reseller_tax_id: 'reseller_tax_id',
  verification_status: 'verification_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Catalog_listing_imagesScalarFieldEnum = {
  catalog_listing_image_id: 'catalog_listing_image_id',
  catalog_listing_id: 'catalog_listing_id',
  image_id: 'image_id'
};

exports.Prisma.Catalog_listingsScalarFieldEnum = {
  catalog_listing_id: 'catalog_listing_id',
  seller_profile_id: 'seller_profile_id',
  seller_user_id: 'seller_user_id',
  title: 'title',
  description: 'description',
  category: 'category',
  category2: 'category2',
  category3: 'category3',
  subcategory: 'subcategory',
  subcategory2: 'subcategory2',
  subcategory3: 'subcategory3',
  subcategory4: 'subcategory4',
  subcategory5: 'subcategory5',
  status: 'status',
  default_image_url: 'default_image_url',
  listing_condition: 'listing_condition',
  cosmetic_condition: 'cosmetic_condition',
  packaging: 'packaging',
  shipping_window: 'shipping_window',
  minimum_order_value: 'minimum_order_value',
  location_address_id: 'location_address_id',
  is_private: 'is_private',
  visibility_settings: 'visibility_settings',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Catalog_product_imagesScalarFieldEnum = {
  catalog_product_image_id: 'catalog_product_image_id',
  catalog_product_id: 'catalog_product_id',
  image_id: 'image_id'
};

exports.Prisma.Catalog_productsScalarFieldEnum = {
  catalog_product_id: 'catalog_product_id',
  catalog_listing_id: 'catalog_listing_id',
  title: 'title',
  description: 'description',
  category: 'category',
  category2: 'category2',
  category3: 'category3',
  subcategory: 'subcategory',
  subcategory2: 'subcategory2',
  subcategory3: 'subcategory3',
  subcategory4: 'subcategory4',
  subcategory5: 'subcategory5',
  brand_id: 'brand_id',
  product_condition: 'product_condition',
  cosmetic_condition: 'cosmetic_condition',
  default_image_url: 'default_image_url',
  sku: 'sku',
  identifier: 'identifier',
  identifier_type: 'identifier_type',
  external_identifier: 'external_identifier',
  external_identifier_type: 'external_identifier_type',
  part_number: 'part_number',
  model_name: 'model_name',
  packaging: 'packaging',
  parent_sku: 'parent_sku',
  parent_product_id: 'parent_product_id',
  variant_attributes: 'variant_attributes',
  retail_price: 'retail_price',
  offer_price: 'offer_price',
  available_quantity: 'available_quantity',
  min_order_quantity: 'min_order_quantity',
  max_order_quantity: 'max_order_quantity',
  weight: 'weight',
  weight_unit_type: 'weight_unit_type',
  product_height: 'product_height',
  product_length: 'product_length',
  product_width: 'product_width',
  length_unit_type: 'length_unit_type',
  accessories: 'accessories',
  is_hazmat: 'is_hazmat',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ImagesScalarFieldEnum = {
  image_id: 'image_id',
  image_url: 'image_url',
  alt_text: 'alt_text',
  sort_order: 'sort_order',
  created_at: 'created_at'
};

exports.Prisma.Resale_certificatesScalarFieldEnum = {
  resale_certificate_id: 'resale_certificate_id',
  user_id: 'user_id',
  certificate_number: 'certificate_number',
  issuing_state: 'issuing_state',
  issuing_jurisdiction: 'issuing_jurisdiction',
  certificate_status: 'certificate_status',
  business_legal_name: 'business_legal_name',
  business_street_address: 'business_street_address',
  business_city: 'business_city',
  business_state: 'business_state',
  business_zip_code: 'business_zip_code',
  business_country: 'business_country',
  federal_tax_id: 'federal_tax_id',
  state_tax_id: 'state_tax_id',
  business_entity_type: 'business_entity_type',
  naics_code: 'naics_code',
  industry_description: 'industry_description',
  issue_date: 'issue_date',
  expiration_date: 'expiration_date',
  renewal_date: 'renewal_date',
  is_blanket_certificate: 'is_blanket_certificate',
  authorized_signatory_name: 'authorized_signatory_name',
  authorized_signatory_title: 'authorized_signatory_title',
  signature_date: 'signature_date',
  verification_status: 'verification_status',
  last_verification_date: 'last_verification_date',
  verification_method: 'verification_method',
  product_categories_covered: 'product_categories_covered',
  document_storage_path: 'document_storage_path',
  document_url: 'document_url',
  compliance_notes: 'compliance_notes',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Seller_profile_preferencesScalarFieldEnum = {
  seller_profile_preference_id: 'seller_profile_preference_id',
  seller_profile_id: 'seller_profile_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Seller_profilesScalarFieldEnum = {
  seller_profile_id: 'seller_profile_id',
  user_id: 'user_id',
  last_active: 'last_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_addressesScalarFieldEnum = {
  user_addresses_id: 'user_addresses_id',
  user_id: 'user_id',
  address_id: 'address_id',
  address_type: 'address_type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_preferencesScalarFieldEnum = {
  user_preference_id: 'user_preference_id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  username: 'username',
  cognito_id: 'cognito_id',
  user_type: 'user_type',
  email: 'email',
  phone: 'phone',
  title: 'title',
  first_name: 'first_name',
  last_name: 'last_name',
  date_of_birth: 'date_of_birth',
  company: 'company',
  avatar_url: 'avatar_url',
  account_locked: 'account_locked',
  risk_score: 'risk_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.product_category_type = exports.$Enums.product_category_type = {
  HOME_KITCHEN_ORGANIZATION: 'HOME_KITCHEN_ORGANIZATION',
  APPAREL: 'APPAREL',
  FOOTWEAR: 'FOOTWEAR',
  APPAREL_ACCESSORIES: 'APPAREL_ACCESSORIES',
  JEWELRY: 'JEWELRY',
  BEAUTY_GROOMING_WELLNESS: 'BEAUTY_GROOMING_WELLNESS',
  CONSUMER_ELECTRONICS: 'CONSUMER_ELECTRONICS',
  MOBILE_ACCESSORIES: 'MOBILE_ACCESSORIES',
  TOYS_GAMES_LEARNING: 'TOYS_GAMES_LEARNING',
  BABY_MATERNITY_KIDS: 'BABY_MATERNITY_KIDS',
  TOOLS_AUTOMOTIVE_INDUSTRIAL: 'TOOLS_AUTOMOTIVE_INDUSTRIAL',
  HEALTH_HOUSEHOLD_CLEANING: 'HEALTH_HOUSEHOLD_CLEANING',
  HEALTH_DEVICES: 'HEALTH_DEVICES',
  PETS: 'PETS',
  GROCERY_SNACKS_BEVERAGES: 'GROCERY_SNACKS_BEVERAGES',
  OFFICE_SCHOOL_STATIONERY: 'OFFICE_SCHOOL_STATIONERY',
  BAGS_LUGGAGE_TRAVEL: 'BAGS_LUGGAGE_TRAVEL',
  OUTDOORS_GARDEN_SPORTING_GOODS: 'OUTDOORS_GARDEN_SPORTING_GOODS',
  SEASONAL_PARTY_GIFTS: 'SEASONAL_PARTY_GIFTS',
  BOOKS_MEDIA_CRAFTS: 'BOOKS_MEDIA_CRAFTS'
};

exports.product_sub_category_type = exports.$Enums.product_sub_category_type = {
  SMALL_APPLIANCES: 'SMALL_APPLIANCES',
  COOKWARE_BAKEWARE: 'COOKWARE_BAKEWARE',
  SERVEWARE_TABLETOP: 'SERVEWARE_TABLETOP',
  KITCHEN_STORAGE_CONTAINERS: 'KITCHEN_STORAGE_CONTAINERS',
  TRASH_CANS_CLEANING_CADDIES: 'TRASH_CANS_CLEANING_CADDIES',
  BEDDING_LINENS: 'BEDDING_LINENS',
  BATH_LINENS_SHOWER_CURTAINS: 'BATH_LINENS_SHOWER_CURTAINS',
  FURNITURE: 'FURNITURE',
  HOME_DECOR: 'HOME_DECOR',
  WALL_ART_FRAMES: 'WALL_ART_FRAMES',
  CURTAINS_WINDOW_TREATMENTS: 'CURTAINS_WINDOW_TREATMENTS',
  RUGS_MATS: 'RUGS_MATS',
  CLOCKS: 'CLOCKS',
  LAUNDRY_HAMPERS_DRYING_RACKS: 'LAUNDRY_HAMPERS_DRYING_RACKS',
  STORAGE_BINS_CLOSET_ORGANIZERS: 'STORAGE_BINS_CLOSET_ORGANIZERS',
  MENS_CLOTHING: 'MENS_CLOTHING',
  WOMENS_CLOTHING: 'WOMENS_CLOTHING',
  KIDS_BABY_CLOTHING: 'KIDS_BABY_CLOTHING',
  SEASONAL_APPAREL: 'SEASONAL_APPAREL',
  UNDERGARMENTS_SLEEPWEAR: 'UNDERGARMENTS_SLEEPWEAR',
  SWIMWEAR: 'SWIMWEAR',
  WORKWEAR_UNIFORMS: 'WORKWEAR_UNIFORMS',
  MENS_SHOES: 'MENS_SHOES',
  WOMENS_SHOES: 'WOMENS_SHOES',
  SOCKS_HOSIERY: 'SOCKS_HOSIERY',
  FOOTWEAR_ACCESSORIES: 'FOOTWEAR_ACCESSORIES',
  BELTS: 'BELTS',
  HATS_BEANIES: 'HATS_BEANIES',
  SCARVES: 'SCARVES',
  GLOVES: 'GLOVES',
  EARRINGS: 'EARRINGS',
  NECKLACES: 'NECKLACES',
  RINGS: 'RINGS',
  BRACELETS: 'BRACELETS',
  COSMETICS: 'COSMETICS',
  HAIRCARE: 'HAIRCARE',
  SKINCARE: 'SKINCARE',
  FRAGRANCES: 'FRAGRANCES',
  FRAGRANCE_SETS_SAMPLERS: 'FRAGRANCE_SETS_SAMPLERS',
  GROOMING_TOOLS: 'GROOMING_TOOLS',
  MENS_GROOMING: 'MENS_GROOMING',
  NAIL_CARE: 'NAIL_CARE',
  ORAL_CARE: 'ORAL_CARE',
  BEAUTY_TOOLS_BRUSHES_MIRRORS_TWEEZERS: 'BEAUTY_TOOLS_BRUSHES_MIRRORS_TWEEZERS',
  TEMPORARY_TATTOOS_BODY_ART: 'TEMPORARY_TATTOOS_BODY_ART',
  CONTACT_LENS_CASES_EYE_DROPS: 'CONTACT_LENS_CASES_EYE_DROPS',
  MASSAGE_WELLNESS_DEVICES: 'MASSAGE_WELLNESS_DEVICES',
  PHONES_TABLETS: 'PHONES_TABLETS',
  LAPTOPS_ACCESSORIES: 'LAPTOPS_ACCESSORIES',
  WEARABLES_SMARTWATCHES: 'WEARABLES_SMARTWATCHES',
  AUDIO_HEADPHONES_SPEAKERS: 'AUDIO_HEADPHONES_SPEAKERS',
  CAMERAS_DRONES: 'CAMERAS_DRONES',
  TVS_TV_ACCESSORIES: 'TVS_TV_ACCESSORIES',
  SMART_HOME_DEVICES_THERMOSTATS_PLUGS_LIGHTING: 'SMART_HOME_DEVICES_THERMOSTATS_PLUGS_LIGHTING',
  EREADERS_TABLETS: 'EREADERS_TABLETS',
  VIDEO_GAME_CONSOLES: 'VIDEO_GAME_CONSOLES',
  GAME_ACCESSORIES: 'GAME_ACCESSORIES',
  DVDS_BLU_RAY: 'DVDS_BLU_RAY',
  SURGE_PROTECTORS_POWER_STRIPS: 'SURGE_PROTECTORS_POWER_STRIPS',
  PROJECTORS_ACCESSORIES: 'PROJECTORS_ACCESSORIES',
  DASH_CAMS_CAR_ELECTRONICS: 'DASH_CAMS_CAR_ELECTRONICS',
  PHONE_CASES: 'PHONE_CASES',
  SCREEN_PROTECTORS: 'SCREEN_PROTECTORS',
  CHARGING_CABLES: 'CHARGING_CABLES',
  POWER_BANKS: 'POWER_BANKS',
  PRESCHOOL_LEARNING: 'PRESCHOOL_LEARNING',
  ACTION_FIGURES_DOLLS: 'ACTION_FIGURES_DOLLS',
  OUTDOOR_TOYS: 'OUTDOOR_TOYS',
  BOARD_GAMES_PUZZLES: 'BOARD_GAMES_PUZZLES',
  BUILDING_SETS_LEGO: 'BUILDING_SETS_LEGO',
  RC_TOYS_VEHICLES: 'RC_TOYS_VEHICLES',
  PLAYSETS_PRETEND_PLAY: 'PLAYSETS_PRETEND_PLAY',
  STEM_EDUCATIONAL_KITS: 'STEM_EDUCATIONAL_KITS',
  FLASH_CARDS_LEARNING_GAMES: 'FLASH_CARDS_LEARNING_GAMES',
  FIDGET_TOYS_SENSORY_KITS: 'FIDGET_TOYS_SENSORY_KITS',
  SLIME_PUTTY: 'SLIME_PUTTY',
  TRADING_CARDS_POKEMON_SPORTS: 'TRADING_CARDS_POKEMON_SPORTS',
  DIAPERS_WIPES: 'DIAPERS_WIPES',
  STROLLERS_CAR_SEATS: 'STROLLERS_CAR_SEATS',
  FEEDING_NURSING: 'FEEDING_NURSING',
  MATERNITY_WEAR: 'MATERNITY_WEAR',
  BABY_APPAREL: 'BABY_APPAREL',
  BABY_TOYS: 'BABY_TOYS',
  KIDS_BOOKS_ACTIVITY_SETS: 'KIDS_BOOKS_ACTIVITY_SETS',
  POWER_TOOLS: 'POWER_TOOLS',
  HAND_TOOLS: 'HAND_TOOLS',
  CAR_ACCESSORIES: 'CAR_ACCESSORIES',
  CAR_CARE_WAXES_WASH_AIR_FRESHENERS: 'CAR_CARE_WAXES_WASH_AIR_FRESHENERS',
  TOOL_STORAGE_BOXES_BAGS_BENCHES: 'TOOL_STORAGE_BOXES_BAGS_BENCHES',
  MEASURING_TOOLS_LEVELS_TAPE: 'MEASURING_TOOLS_LEVELS_TAPE',
  LIGHTING_TOOLS_WORK_LIGHTS_HEADLAMPS: 'LIGHTING_TOOLS_WORK_LIGHTS_HEADLAMPS',
  GARAGE_STORAGE: 'GARAGE_STORAGE',
  SAFETY_SECURITY_EXTINGUISHERS_FLASHLIGHTS_ALARMS: 'SAFETY_SECURITY_EXTINGUISHERS_FLASHLIGHTS_ALARMS',
  REPLACEMENT_PARTS_BELTS_FILTERS_FUSES: 'REPLACEMENT_PARTS_BELTS_FILTERS_FUSES',
  PAINT_SUPPLIES_ROLLERS_BRUSHES_TAPE: 'PAINT_SUPPLIES_ROLLERS_BRUSHES_TAPE',
  WORKWEAR_SAFETY_GEAR_GLOVES_GOGGLES_VESTS: 'WORKWEAR_SAFETY_GEAR_GLOVES_GOGGLES_VESTS',
  OTC_MEDICINE: 'OTC_MEDICINE',
  VITAMINS_SUPPLEMENTS: 'VITAMINS_SUPPLEMENTS',
  FEMININE_CARE: 'FEMININE_CARE',
  ADULT_INCONTINENCE: 'ADULT_INCONTINENCE',
  DISPOSABLES_MASKS_GLOVES_COTTON_BALLS: 'DISPOSABLES_MASKS_GLOVES_COTTON_BALLS',
  CLEANING_SUPPLIES: 'CLEANING_SUPPLIES',
  CLEANING_TOOLS_MOPS_BRUSHES_SPONGES: 'CLEANING_TOOLS_MOPS_BRUSHES_SPONGES',
  PAPER_PRODUCTS_TISSUES_TOWELS_TP: 'PAPER_PRODUCTS_TISSUES_TOWELS_TP',
  HUMIDIFIERS_AIR_PURIFIERS: 'HUMIDIFIERS_AIR_PURIFIERS',
  MOBILITY_AIDS_CANES_WALKERS: 'MOBILITY_AIDS_CANES_WALKERS',
  PILL_ORGANIZERS: 'PILL_ORGANIZERS',
  TOILET_SAFETY_BATH_RAILS: 'TOILET_SAFETY_BATH_RAILS',
  THERMOMETERS: 'THERMOMETERS',
  BLOOD_PRESSURE_MONITORS: 'BLOOD_PRESSURE_MONITORS',
  OXIMETERS: 'OXIMETERS',
  FIRST_AID_KITS: 'FIRST_AID_KITS',
  PET_FOOD: 'PET_FOOD',
  PET_TOYS_ACCESSORIES: 'PET_TOYS_ACCESSORIES',
  PET_HEALTH_PRODUCTS: 'PET_HEALTH_PRODUCTS',
  PET_BEDS_CRATES: 'PET_BEDS_CRATES',
  GROOMING_TOOLS_BRUSHES_CLIPPERS: 'GROOMING_TOOLS_BRUSHES_CLIPPERS',
  FEEDING_BOWLS_WATER_DISPENSERS: 'FEEDING_BOWLS_WATER_DISPENSERS',
  LITTER_BOXES_WASTE_BAGS: 'LITTER_BOXES_WASTE_BAGS',
  SHELF_STABLE_FOODS: 'SHELF_STABLE_FOODS',
  BEVERAGES: 'BEVERAGES',
  SNACKS_CANDY: 'SNACKS_CANDY',
  GOURMET_ITEMS: 'GOURMET_ITEMS',
  PANTRY_PACKS: 'PANTRY_PACKS',
  BABY_FOOD_FORMULA: 'BABY_FOOD_FORMULA',
  CONDIMENTS_SPICES: 'CONDIMENTS_SPICES',
  BREAKFAST_CEREALS: 'BREAKFAST_CEREALS',
  STATIONERY_SUPPLIES: 'STATIONERY_SUPPLIES',
  DESK_ACCESSORIES: 'DESK_ACCESSORIES',
  BACKPACKS_LUNCHBOXES: 'BACKPACKS_LUNCHBOXES',
  PRINTERS_SCANNERS: 'PRINTERS_SCANNERS',
  INK_TONER: 'INK_TONER',
  CALCULATORS: 'CALCULATORS',
  OFFICE_PHONES: 'OFFICE_PHONES',
  CALENDARS_PLANNERS: 'CALENDARS_PLANNERS',
  WHITEBOARDS_CORKBOARDS: 'WHITEBOARDS_CORKBOARDS',
  LABELS_LABEL_MAKERS: 'LABELS_LABEL_MAKERS',
  BINDER_CLIPS_STAPLERS_TAPE_DISPENSERS: 'BINDER_CLIPS_STAPLERS_TAPE_DISPENSERS',
  HANDBAGS_WALLETS: 'HANDBAGS_WALLETS',
  TRAVEL_LUGGAGE: 'TRAVEL_LUGGAGE',
  DUFFEL_BAGS: 'DUFFEL_BAGS',
  BACKPACKS: 'BACKPACKS',
  FANNY_PACKS_CROSSBODY_BAGS: 'FANNY_PACKS_CROSSBODY_BAGS',
  LAPTOP_BAGS_TECH_SLEEVES: 'LAPTOP_BAGS_TECH_SLEEVES',
  TOILETRY_BAGS: 'TOILETRY_BAGS',
  TRAVEL_KITS_ORGANIZERS: 'TRAVEL_KITS_ORGANIZERS',
  NECK_PILLOWS: 'NECK_PILLOWS',
  TSA_LOCKS_LUGGAGE_TAGS: 'TSA_LOCKS_LUGGAGE_TAGS',
  REUSABLES_ECO_GOODS: 'REUSABLES_ECO_GOODS',
  CAMPING_HIKING_GEAR: 'CAMPING_HIKING_GEAR',
  FITNESS_EQUIPMENT: 'FITNESS_EQUIPMENT',
  BIKES_SCOOTERS: 'BIKES_SCOOTERS',
  HUNTING_FISHING: 'HUNTING_FISHING',
  GARDEN_TOOLS: 'GARDEN_TOOLS',
  PLANTERS_POTS: 'PLANTERS_POTS',
  OUTDOOR_LIGHTING: 'OUTDOOR_LIGHTING',
  GRILL_ACCESSORIES: 'GRILL_ACCESSORIES',
  FIRE_PITS: 'FIRE_PITS',
  LAWN_CHAIRS: 'LAWN_CHAIRS',
  POOLS_FLOATS: 'POOLS_FLOATS',
  COOLERS: 'COOLERS',
  INSECT_REPELLENT_CITRONELLA_CANDLES: 'INSECT_REPELLENT_CITRONELLA_CANDLES',
  OUTDOOR_FURNITURE_COVERS: 'OUTDOOR_FURNITURE_COVERS',
  SNOW_SHOVELS_ICE_MELT: 'SNOW_SHOVELS_ICE_MELT',
  HOLIDAY_DECOR: 'HOLIDAY_DECOR',
  GIFT_SETS: 'GIFT_SETS',
  SEASONAL_KITCHENWARE: 'SEASONAL_KITCHENWARE',
  SEASONAL_LIGHTING: 'SEASONAL_LIGHTING',
  PARTY_SUPPLIES_DECORATIONS: 'PARTY_SUPPLIES_DECORATIONS',
  COSTUMES_ACCESSORIES: 'COSTUMES_ACCESSORIES',
  WEDDING_CELEBRATION_SUPPLIES_FAVORS_GUEST_BOOKS: 'WEDDING_CELEBRATION_SUPPLIES_FAVORS_GUEST_BOOKS',
  CHILDRENS_BOOKS: 'CHILDRENS_BOOKS',
  COOKBOOKS: 'COOKBOOKS',
  PUZZLE_ACTIVITY_BOOKS: 'PUZZLE_ACTIVITY_BOOKS',
  FICTION_NON_FICTION: 'FICTION_NON_FICTION',
  ADULT_COLORING_BOOKS: 'ADULT_COLORING_BOOKS',
  RELIGIOUS_INSPIRATIONAL_BOOKS: 'RELIGIOUS_INSPIRATIONAL_BOOKS',
  ART_TOOLS_DIY_KITS: 'ART_TOOLS_DIY_KITS',
  SEWING_FABRIC_TOOLS: 'SEWING_FABRIC_TOOLS',
  CRAFT_SUPPLIES_MATERIALS: 'CRAFT_SUPPLIES_MATERIALS',
  EMBROIDERY_NOTIONS: 'EMBROIDERY_NOTIONS'
};

exports.product_identifier_type = exports.$Enums.product_identifier_type = {
  UPC: 'UPC',
  EAN: 'EAN',
  GTIN: 'GTIN',
  ISBN: 'ISBN',
  ISSN: 'ISSN',
  UNKNOWN: 'UNKNOWN'
};

exports.product_external_identifier_type = exports.$Enums.product_external_identifier_type = {
  ASIN: 'ASIN'
};

exports.product_condition_type = exports.$Enums.product_condition_type = {
  NEW_RETAIL_ECOMMERCE_READY: 'NEW_RETAIL_ECOMMERCE_READY',
  NEW_OPEN_BOX: 'NEW_OPEN_BOX',
  NEW_DAMAGED_BOX: 'NEW_DAMAGED_BOX',
  NEW_BULK_PACKAGED: 'NEW_BULK_PACKAGED',
  REFURBISHED_MANUFACTURER_CERTIFIED: 'REFURBISHED_MANUFACTURER_CERTIFIED',
  REFURBISHED_SELLER_REFURBISHED: 'REFURBISHED_SELLER_REFURBISHED',
  USED_LIKE_NEW: 'USED_LIKE_NEW',
  USED_GOOD: 'USED_GOOD',
  USED_FAIR: 'USED_FAIR',
  USED_AS_IS: 'USED_AS_IS',
  DAMAGED_FUNCTIONAL: 'DAMAGED_FUNCTIONAL',
  DAMAGED_NON_FUNCTIONAL: 'DAMAGED_NON_FUNCTIONAL',
  SALVAGE_PARTS_ONLY: 'SALVAGE_PARTS_ONLY',
  CRACKED_BROKEN: 'CRACKED_BROKEN',
  UNINSPECTED_RETURNS: 'UNINSPECTED_RETURNS',
  MIXED_CONDITION: 'MIXED_CONDITION',
  SHELF_PULLS: 'SHELF_PULLS',
  CLOSEOUTS: 'CLOSEOUTS',
  OVERSTOCK: 'OVERSTOCK',
  EXPIRED_SHORT_DATED: 'EXPIRED_SHORT_DATED'
};

exports.weight_type = exports.$Enums.weight_type = {
  MICROGRAM: 'MICROGRAM',
  MILLIGRAM: 'MILLIGRAM',
  GRAM: 'GRAM',
  KILOGRAM: 'KILOGRAM',
  METRIC_TON: 'METRIC_TON',
  IMPERIAL_TON: 'IMPERIAL_TON',
  US_TON: 'US_TON',
  OUNCE: 'OUNCE',
  POUND: 'POUND',
  STONE: 'STONE'
};

exports.length_type = exports.$Enums.length_type = {
  MICROMETER: 'MICROMETER',
  MILLIMETER: 'MILLIMETER',
  CENTIMETER: 'CENTIMETER',
  NANOMETER: 'NANOMETER',
  METER: 'METER',
  KILOMETER: 'KILOMETER',
  MILE: 'MILE',
  YARD: 'YARD',
  FOOT: 'FOOT',
  INCH: 'INCH',
  NAUTICAL_MILE: 'NAUTICAL_MILE'
};

exports.listing_status_type = exports.$Enums.listing_status_type = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  COMPLETED: 'COMPLETED',
  SOLD: 'SOLD',
  EXPIRED: 'EXPIRED',
  REMOVED: 'REMOVED'
};

exports.lot_condition_type = exports.$Enums.lot_condition_type = {
  NEW: 'NEW',
  LIKE_NEW: 'LIKE_NEW',
  REFURBISHED: 'REFURBISHED',
  USED: 'USED',
  SCRATCH_AND_DENT: 'SCRATCH_AND_DENT',
  DAMAGED: 'DAMAGED',
  SALVAGE: 'SALVAGE',
  MIXED: 'MIXED',
  CUSTOMER_RETURNS: 'CUSTOMER_RETURNS',
  SHELF_PULLS: 'SHELF_PULLS',
  UNKNOWN: 'UNKNOWN',
  CLOSEOUTS: 'CLOSEOUTS',
  OVERSTOCK: 'OVERSTOCK'
};

exports.shipping_type = exports.$Enums.shipping_type = {
  FLAT_RATE: 'FLAT_RATE',
  CALCULATED_SHIPPING: 'CALCULATED_SHIPPING',
  BUYER_ARRANGED: 'BUYER_ARRANGED',
  FREE_SHIPPING: 'FREE_SHIPPING',
  LOCAL_PICKUP_ONLY: 'LOCAL_PICKUP_ONLY',
  BINDING_SHIPPING: 'BINDING_SHIPPING',
  BUYER_PICKUP_ALLOWED: 'BUYER_PICKUP_ALLOWED'
};

exports.freight_type = exports.$Enums.freight_type = {
  SINGLE_BOX: 'SINGLE_BOX',
  MULTIPLE_BOXES: 'MULTIPLE_BOXES',
  LTL: 'LTL',
  FTL: 'FTL'
};

exports.lot_packaging_type = exports.$Enums.lot_packaging_type = {
  PALLETS: 'PALLETS',
  FLOOR_LOADED: 'FLOOR_LOADED'
};

exports.bid_increment_type = exports.$Enums.bid_increment_type = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED: 'FIXED'
};

exports.auction_status_type = exports.$Enums.auction_status_type = {
  ACTIVE: 'ACTIVE',
  CANCELLED: 'CANCELLED',
  ENDED: 'ENDED'
};

exports.buyer_verification_status_type = exports.$Enums.buyer_verification_status_type = {
  PENDING: 'PENDING',
  VERIFIED: 'VERIFIED',
  REJECTED: 'REJECTED'
};

exports.packaging_type = exports.$Enums.packaging_type = {
  ORIGINAL_PACKAGING_SEALED: 'ORIGINAL_PACKAGING_SEALED',
  ORIGINAL_PACKAGING_OPENED: 'ORIGINAL_PACKAGING_OPENED',
  NO_RETAIL_PACKAGING: 'NO_RETAIL_PACKAGING',
  DAMAGED_PACKAGING: 'DAMAGED_PACKAGING',
  REPACKAGED_BROWN_BOX: 'REPACKAGED_BROWN_BOX'
};

exports.catalog_product_status_type = exports.$Enums.catalog_product_status_type = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  OUT_OF_STOCK: 'OUT_OF_STOCK'
};

exports.us_state_type = exports.$Enums.us_state_type = {
  AL: 'AL',
  AK: 'AK',
  AZ: 'AZ',
  AR: 'AR',
  CA: 'CA',
  CO: 'CO',
  CT: 'CT',
  DE: 'DE',
  FL: 'FL',
  GA: 'GA',
  HI: 'HI',
  ID: 'ID',
  IL: 'IL',
  IN: 'IN',
  IA: 'IA',
  KS: 'KS',
  KY: 'KY',
  LA: 'LA',
  ME: 'ME',
  MD: 'MD',
  MA: 'MA',
  MI: 'MI',
  MN: 'MN',
  MS: 'MS',
  MO: 'MO',
  MT: 'MT',
  NE: 'NE',
  NV: 'NV',
  NH: 'NH',
  NJ: 'NJ',
  NM: 'NM',
  NY: 'NY',
  NC: 'NC',
  ND: 'ND',
  OH: 'OH',
  OK: 'OK',
  OR: 'OR',
  PA: 'PA',
  RI: 'RI',
  SC: 'SC',
  SD: 'SD',
  TN: 'TN',
  TX: 'TX',
  UT: 'UT',
  VT: 'VT',
  VA: 'VA',
  WA: 'WA',
  WV: 'WV',
  WI: 'WI',
  WY: 'WY'
};

exports.certificate_status_type = exports.$Enums.certificate_status_type = {
  ACTIVE: 'ACTIVE',
  EXPIRED: 'EXPIRED',
  REVOKED: 'REVOKED',
  PENDING: 'PENDING'
};

exports.country_code_type = exports.$Enums.country_code_type = {
  US: 'US',
  CA: 'CA',
  MX: 'MX',
  GB: 'GB',
  FR: 'FR',
  DE: 'DE',
  IT: 'IT',
  ES: 'ES',
  NL: 'NL',
  BE: 'BE',
  CH: 'CH',
  AT: 'AT',
  SE: 'SE',
  NO: 'NO',
  DK: 'DK',
  FI: 'FI',
  IE: 'IE',
  PT: 'PT',
  GR: 'GR',
  PL: 'PL',
  CZ: 'CZ',
  HU: 'HU',
  SK: 'SK',
  SI: 'SI',
  EE: 'EE',
  LV: 'LV',
  LT: 'LT',
  BG: 'BG',
  RO: 'RO',
  HR: 'HR',
  MT: 'MT',
  CY: 'CY',
  LU: 'LU',
  IS: 'IS',
  LI: 'LI',
  MC: 'MC',
  SM: 'SM',
  VA: 'VA',
  AD: 'AD',
  JP: 'JP',
  CN: 'CN',
  KR: 'KR',
  IN: 'IN',
  AU: 'AU',
  NZ: 'NZ',
  SG: 'SG',
  HK: 'HK',
  TW: 'TW',
  MY: 'MY',
  TH: 'TH',
  PH: 'PH',
  ID: 'ID',
  VN: 'VN',
  BR: 'BR',
  AR: 'AR',
  CL: 'CL',
  CO: 'CO',
  PE: 'PE',
  UY: 'UY',
  PY: 'PY',
  BO: 'BO',
  EC: 'EC',
  VE: 'VE',
  GY: 'GY',
  SR: 'SR',
  FK: 'FK',
  GF: 'GF',
  ZA: 'ZA',
  EG: 'EG',
  NG: 'NG',
  KE: 'KE',
  GH: 'GH',
  MA: 'MA',
  TN: 'TN',
  DZ: 'DZ',
  LY: 'LY',
  SD: 'SD',
  ET: 'ET',
  UG: 'UG',
  TZ: 'TZ',
  MZ: 'MZ',
  MG: 'MG',
  ZM: 'ZM',
  ZW: 'ZW',
  BW: 'BW',
  NA: 'NA',
  SZ: 'SZ',
  LS: 'LS',
  MW: 'MW',
  AO: 'AO',
  CD: 'CD',
  CG: 'CG',
  CF: 'CF',
  CM: 'CM',
  TD: 'TD',
  NE: 'NE',
  ML: 'ML',
  BF: 'BF',
  CI: 'CI',
  GN: 'GN',
  SN: 'SN',
  GM: 'GM',
  GW: 'GW',
  SL: 'SL',
  LR: 'LR',
  MR: 'MR',
  CV: 'CV',
  ST: 'ST',
  GQ: 'GQ',
  GA: 'GA',
  DJ: 'DJ',
  SO: 'SO',
  ER: 'ER',
  KM: 'KM',
  SC: 'SC',
  MU: 'MU',
  RE: 'RE',
  YT: 'YT',
  MV: 'MV',
  RU: 'RU',
  TR: 'TR',
  IL: 'IL',
  JO: 'JO',
  LB: 'LB',
  SY: 'SY',
  IQ: 'IQ',
  IR: 'IR',
  AF: 'AF',
  PK: 'PK',
  BD: 'BD',
  LK: 'LK',
  NP: 'NP',
  BT: 'BT',
  MM: 'MM',
  LA: 'LA',
  KH: 'KH',
  BN: 'BN',
  MN: 'MN',
  KZ: 'KZ',
  KG: 'KG',
  TJ: 'TJ',
  TM: 'TM',
  UZ: 'UZ',
  GE: 'GE',
  AM: 'AM',
  AZ: 'AZ',
  BY: 'BY',
  MD: 'MD',
  UA: 'UA',
  FJ: 'FJ',
  PG: 'PG',
  SB: 'SB',
  VU: 'VU',
  NC: 'NC',
  PF: 'PF',
  WF: 'WF',
  AS: 'AS',
  GU: 'GU',
  MP: 'MP',
  PW: 'PW',
  FM: 'FM',
  MH: 'MH',
  KI: 'KI',
  NR: 'NR',
  TV: 'TV',
  TO: 'TO',
  WS: 'WS',
  CK: 'CK',
  NU: 'NU',
  TK: 'TK'
};

exports.certificate_business_entity_type = exports.$Enums.certificate_business_entity_type = {
  CORPORATION: 'CORPORATION',
  LLC: 'LLC',
  PARTNERSHIP: 'PARTNERSHIP',
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  OTHER: 'OTHER'
};

exports.certificate_verification_status_type = exports.$Enums.certificate_verification_status_type = {
  VERIFIED: 'VERIFIED',
  PENDING: 'PENDING',
  FAILED: 'FAILED',
  EXPIRED: 'EXPIRED'
};

exports.certificate_verification_method_type = exports.$Enums.certificate_verification_method_type = {
  MANUAL: 'MANUAL',
  AUTOMATED: 'AUTOMATED',
  THIRD_PARTY: 'THIRD_PARTY',
  SELF_REPORTED: 'SELF_REPORTED'
};

exports.address_type = exports.$Enums.address_type = {
  DEFAULT: 'DEFAULT',
  SHIPPING: 'SHIPPING',
  BILLING: 'BILLING'
};

exports.user_type = exports.$Enums.user_type = {
  BUYER: 'BUYER',
  SELLER: 'SELLER',
  BUYER_AND_SELLER: 'BUYER_AND_SELLER'
};

exports.Prisma.ModelName = {
  addresses: 'addresses',
  auction_listing_images: 'auction_listing_images',
  auction_listing_product_manifests: 'auction_listing_product_manifests',
  auction_listings: 'auction_listings',
  brands: 'brands',
  buyer_profile_preferences: 'buyer_profile_preferences',
  buyer_profiles: 'buyer_profiles',
  catalog_listing_images: 'catalog_listing_images',
  catalog_listings: 'catalog_listings',
  catalog_product_images: 'catalog_product_images',
  catalog_products: 'catalog_products',
  images: 'images',
  resale_certificates: 'resale_certificates',
  seller_profile_preferences: 'seller_profile_preferences',
  seller_profiles: 'seller_profiles',
  user_addresses: 'user_addresses',
  user_preferences: 'user_preferences',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
